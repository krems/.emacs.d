import string
import types

def removeDuplicates(klasses):
    tmp = klasses
    for first in tmp:
        for second in tmp:
            if issubclass(first, second):
                klasses.remove(second)
    return klasses

fclasses = open('classes')
classes = {}

def constructor(slf, *args):
    slf.args = args

str = fclasses.readline()
while str:
    class_name = string.split(str, ':')[0]
    bases = [object]
    for clazz in string.split(string.split(str, ':')[1]):
        bases.append(classes[clazz])
    bases = removeDuplicates(bases)
    print "Created class name =", class_name + ", bases:",  bases
    classes[class_name] = type(class_name, tuple(bases), {'__init__':constructor})
    str = fclasses.readline()

fclasses.close()
# todo: check for duplicating bases 
print ''

fobjects = open('objects')
objects = []

str = fobjects.readline()
while str:
    class_name = string.split(str, '/')[0]
    clazz = classes[class_name]
    new_object = clazz(*string.split(string.split(str, '/')[1]))
    objects.append(new_object)
    str = fobjects.readline()

for obj in objects:
    print obj, obj.args

fobjects.close()
