template <typename T>
class Heap {
  vector<T> _data;
 public:
  Heap() {}
  explicit Heap(T[] data): _data(data) {
    makeHeap(data);
  }

  void makeHeap(T[] data) {

  }

  T& getMin() const {
    
  }

  void add(const T& element) {

  }
  
  ~Heap() {}

 private:
  void heapifize() {
    
  }
};
