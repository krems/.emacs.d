// several words about std::string

#include <string>
#include <iostream>
#include <string.h>

// char
// wchar_t std::wstring;

// typedef basic_string<char, std::char_traits<char> > string;
// typedef basic_string<wchar_t> wstring;

class MyCharTraits: public std::char_traits<char> {
  static bool eq(char a, char b) {
    return tolower(a) == tolower(b);
  }
  static bool lt(char a, char b) {
    return tolower(a) < tolower(b);
  }
  static int compare(const char * s1, const char * s2, size_t n) {
    while(n-->0) {
      if (eq(*s1, *s2)) {
        return lt(*s1, *s2) ? -1 : 1;
      }
      ++s1;
      ++s2;
    }
    return 0;
  }
};

typedef basic_string<char, MyCharTraits> MyString;


int main() {
  std::string s1 = "abc", s2 = "AbC";
  std::cout << (s1 == s2) << std::endl;

  MyString s1 = "abc", s2 = "AbC";
  std:cout << (s1 == s2) << std::endl;
  return 0;
}
