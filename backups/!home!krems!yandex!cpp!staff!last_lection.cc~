
// Function <void(int,int)>
template <typename F>
class Function;


template <typename R, typename A1, typename A2>
class Function<R(A1, A2)> {
 public:
  typedef R result_type;
  typedef A1 first_arg_type;
  typedef A2 second_arg_type;
};

int main() {
  std::cout <<
      typeid(Function<void(int, int)>::result_type).name() <<
      std::endl;
}
